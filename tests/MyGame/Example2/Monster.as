/**
 * 
 * Powered by Zhangguodong 
 * 
 */

// automatically generated by the FlatBuffers compiler, do not modify

package MyGame.Example2
{

	import zgd.google.flatbuffers.*;
	import flash.utils.ByteArray;


	public class Monster extends Table
	{
		/**
		 * @param ByteArray inData
		 * @return Monster
		 */
		public static function getRootAsMonster(inData:ByteArray):Monster
		{
			var bb:ByteBuffer = ByteBuffer.wrap(inData);
			var obj:Monster = new Monster();
			obj.init(bb.getInt(bb.getPosition()) + bb.getPosition(), bb);
			return obj;
		}

		public static function MonsterIdentifier():String
		{
			return "MONS";
		}

		public static function MonsterBufferHasIdentifier(buf:ByteBuffer):Boolean
		{
			return __has_identifier(buf, MonsterIdentifier());
		}

		public static function MonsterExtension():String
		{
			return "mon";
		}

		/**
		 * @param int i offset
		 * @param ByteBuffer bb
		 * @return Monster
		 */
		public function init(i:int, bb:ByteBuffer):Monster
		{
			this.bb_pos = i;
			this.bb = bb;
			return this;
		}

		/**
		 * @param FlatBufferBuilder builder
		 * @return void
		 */
		public static function startMonster(builder:FlatBufferBuilder):void
		{
			builder.startObject(0);
		}

		/**
		 * @param FlatBufferBuilder builder
		 * @param (if type is * means int offset value)
		 * @return Monster offset
		 */
		public static function createMonster(builder:FlatBufferBuilder, ):int
		{
			builder.startObject(0);
			var o:int = builder.endObject();
			return o;
		}

		/**
		 * @param FlatBufferBuilder builder
		 * @return int table offset
		 */
		public static function endMonster(builder:FlatBufferBuilder):int
		{
			var o:int = builder.endObject();
			return o;
		}

	}


}